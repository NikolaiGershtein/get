
Лабораторная работа Git
Цель занятия
Познакомиться с системой контроля версий git и сайтом GitHub, потренироваться их использовать

Нужно научиться
генерировать ssh ключ
пользоваться ssh ключом
создавать репозиторий на сайте GitHub
клонировать репозторий
комитить
создавать ветки
сливать ветки
отправлять изменения на сервер
получать изменения с сервера
Инструменты
Git
GitHub
Markdown
Задача №1. Первый комит
Создать репозиторий, клонировать его, сделать комит и отправить изменения на сервер

создать аккаунт на сайте GitHub.com
настроить двухфакторную аутентификацию
добавить свою фотографию в аккаунт
создать репозиторий, назвав его своей фамилией
дать другу доступ к репозиторию
создать ssh-ключ
добавить публичный ключ в свой аккаунт на GitHub
запустить ssh-agent (только под Windows)
добавить приватный ключ в ssh-agent
клонировать свой новый репозиторий на рабочий компьютер: git clone git@github.com:username/repository.git
добавить в репозиторий файл git-how-to.md
описать на языке разметки markdown инструкции для себя:
как создать ssh ключ
как добавить ключ в аккаунт на GitHub
как склонировать репозиторий
проверить статус репозитория: git status
подготовить новый файл для комита: git add git-how-to.md
проверить статус репозитория: git status
сделать комит: git commit -m “initial commit”
отправить изменения на сервер: git push
Задача №2. Первая ветка
Клонировать репозиторий, создать ветку, сделать два комита, отпраивть изменения на сервер

принять приглашение друга на доступ к репозиторию, которое пришло на почту
клонировать репозиторий друга на свой рабочий компьютер
в репозитории друга создать ветку со своей фамилией: git branch surname
переключиться в новую ветку: git checkout surname
добавить в репозиторий файл branch-how-to.md
написать в новом файле пару строк о том, как пользоваться ветками
проверить статус репозитория: git status
подготовить новый файл для комита: git add branch-how-to.md
проверить статус репозитория: git status
сделать комит: git commit -m “branch instructions”
отправить изменения на сервер: git push
дополнить файл branch-how-to.md полной инструкцией:
как создать ветку
как переключиться в ветку
как отправить ветку на сервер
проверить статус репозитория: git status
подготовить новый файл для комита: git add branch-how-to.md
проверить статус репозитория: git status
сделать комит: git commit -m “full branch instruction”
отправить изменения на сервер: git push
Задача №3. Первое слияние веток
Получить изменения с сервера, слить ветки, сделать ещё один комит

перейти в свой репозиторий
получить с сервера изменения во всех ветках: git fetch
посмотреть все ветки: git branch --all
переключиться в ветку друга, чтобы создать её локально: git checkout surname
посмотреть все ветки: git branch --all
переключиться в основную ветку: git checkout master
обьединить ветку друга с основной веткой: git merge surname
отправить изменения на сервер: git push
посмотреть историю репозиория: git log
добавить в репозиторий файл merge-how-to.md
описать на языке разметки markdown инструкции для себя:
как получить ветку с сервера
как слиять одну ветку с другой
что сделать после слияния веток
проверить статус репозитория: git status
подготовить новый файл для комита: git add .
проверить статус репозитория: git status
сделать комит: git commit -m “merge instruction”
отправить изменения на сервер: git push
Задача №4. Второй репозиторий
Создать репозиторий, добавить в него свои скрипты

создать в своём аккаунте репозиторий get
клонировать репозиторий
скопировать в папку репозитория свои Python-скрипты
сделать комит изменений
отправить изменения на сервер